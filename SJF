#include <stdio.h>

int main()
{
int bt[20],p[20],wt[20],tat[20],priority[20],i,j,n,total=0,pos,pri,temp;//bt-burst time p-process number wt-waiting time   tat- turn around time
float avg_wt,avg_tat;//avg_wt- average waiting time   avg_tat- average turnaround time
printf("Enter number of process:");
scanf("%d",&n);
if(n>0)
{
	printf("\nEnter Burst Time of each process :\n");

for(i=0;i<n;i++)
{
printf("p%d:",i+1);
scanf("%d",&bt[i]);
if(bt[i]<0)
{
	return printf("The value cannot be negative.");
}
else{
p[i]=i+1;// process number
}
}
//using selection sort for sorting burst time

for(i=0;i<n;i++)
{
pos=i;

for(j=i+1;j<n;j++)
{
if(bt[j]<bt[pos])
pos=j;
}
temp=bt[i];
bt[i]=bt[pos];
bt[pos]=temp;
temp=p[i];
p[i]=p[pos];
p[pos]=temp;
}
wt[0]=0; //waiting time for first process will be zero
//calculate waiting time

for(i=1;i<n;i++)
{
wt[i]=0;
for(j=0;j<i;j++)
wt[i]+=bt[j];
total+=wt[i];
}


avg_wt=(float)total/n; //average waiting time
total=0;


for(i=0;i<n;i++)
{
tat[i]=bt[i]+wt[i];//calculate turnaround time
total+=tat[i];
}

for (i=0;i<n;i++){
pri=int(1+(wt[i]/bt[i]));
priority[i]=pri;
}
//using selection sort for sorting processes according to their priority

for(i=0;i<n;i++)
{
pos=i;

for(j=i+1;j<n;j++)
{
if(priority[j]<priority[pos])
pos=j;
}
temp=priority[i];
priority[i]=priority[pos];
priority[pos]=temp;

temp=bt[i];
bt[i]=bt[pos];
bt[pos]=temp;

temp=p[i];
p[i]=p[pos];
p[pos]=temp;

temp=wt[i];
wt[i]=wt[pos];
wt[pos]=temp;

temp=tat[i];
tat[i]=tat[pos];
tat[pos]=temp;

}
printf("\nProcess\t\tBusrt Time\tWaiting Time\tTurnaround Time \t Priority");

for(i=0;i<n;i++){
printf("\np%d\t\t%d\t\t%d\t\t\t%d\t\t\t%d",p[i],bt[i],wt[i],tat[i],priority[i]);
}

avg_tat=(float)total/n; //average turnaround time
printf("\n\nAverage Waiting Time=%f",avg_wt);
printf("\nAverage Turnaround Time=%f\n",avg_tat);
return NULL;
}
else{
	printf("The number can not be negative and 0.");
}
}
